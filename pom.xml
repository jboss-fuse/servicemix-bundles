<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--

        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements.  See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to You under the Apache License, Version 2.0
        (the "License"); you may not use this file except in compliance with
        the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    -->

    <!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
         !!!!!!                                !!!!!!
         !!!!!!    This pom is only provided   !!!!!!
         !!!!!!   for build convenience and    !!!!!!
         !!!!!!   should not be released       !!!!!!
         !!!!!!                                !!!!!!
         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->


    <!--
        Upstream history of https://github.com/apache/servicemix-bundles/commits/master/pom.xml
        shows that direct (first level) modules are added and removed for each SMX bundles release.
        For example, with new Spring Framework bundles release, ~20 directories are removed (like
        spring-core-5.3.20, spring-beans-5.3.20, ...) and the same amount of directories is added for
        new version (like spring-core-5.3.24, spring-beans-5.3.24, ...)

        jboss-fuse/servicemix-bundles fork will have different kind of direct dependencies - not
        individual modules, but "projects". And only at 2nd level we'll have actual modules, but without
        versions.
        So instead of:

            spring-core-5.3.20/
            spring-beans-5.3.20/
            ...
            spring-security-core-5.7.6/
            ...

        We will have:

            spring-framework/
                spring-core/
                spring-beans/
                ...
            spring-security/
                spring-security-core/
                ...

        This pom keeps fixed version 1-fuse-SNAPSHOT and parent org.apache.servicemix:servicemix-pom:5
        and is not published to Indy/MRRC.

        First level modules (like spring-framework, spring-security) list
        their own modules (2nd level). These:
         - have "pom" packaging
         - have version 1-fuse-SNAPSHOT just like this one
         - have org.apache.servicemix:servicemix-pom:5 parent like this one with <relativePath />
         - are not published to MRRC/Indy
         - have org.apache.servicemix.bundles.<project-id>-bundles artifactId (e.g., "spring-framework-bundles")
         - have "Apache ServiceMix :: Bundles :: <project name>" name

        Second level modules are actual SMX bundles and:
         - have "bundle" packaging
         - have versions according to the bundles being produced
         - have upstream parent org.apache.servicemix.bundles:bundles-pom:15 with <relativePath />
         - are published to MRRC/Indy
         - are listed in <modules> of 1st level modules (like spring-core under spring-framework)
    -->

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.servicemix</groupId>
        <artifactId>servicemix-pom</artifactId>
        <version>5</version>
        <relativePath />
    </parent>

    <groupId>org.apache.servicemix.bundles</groupId>
    <artifactId>org.apache.servicemix.bundles.pom</artifactId>
    <version>1-fuse-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Apache ServiceMix :: Bundles</name>

    <modules>
        <!--module>spring-framework</module-->
        <module>spring-security</module>
        <!--module>kafka-clients-3.1.0-redhat-00009</module-->
        <!--module>okio-1.15.0</module-->
    </modules>

</project>
