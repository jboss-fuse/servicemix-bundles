<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.servicemix.bundles</groupId>
        <artifactId>bundles-pom</artifactId>
        <version>15</version>
        <relativePath/>
    </parent>

    <groupId>org.apache.servicemix.bundles</groupId>
    <artifactId>org.apache.servicemix.bundles.spring-security-config</artifactId>
    <version>5.7.12_1-fuse-SNAPSHOT</version>
    <packaging>bundle</packaging>
    <name>Apache ServiceMix :: Bundles :: ${pkgArtifactId}</name>

    <scm>
        <connection>scm:git:https://github.com/jboss-fuse/servicemix-bundles.git</connection>
        <developerConnection>scm:git:https://github.com/jboss-fuse/servicemix-bundles.git</developerConnection>
        <url>https://github.com/jboss-fuse/servicemix-bundles</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <pkgGroupId>org.springframework.security</pkgGroupId>
        <pkgArtifactId>spring-security-config</pkgArtifactId>
        <pkgVersion>5.7.12</pkgVersion>
        <servicemix.osgi.source.version>5.7.12.1</servicemix.osgi.source.version>
        <servicemix.osgi.export.pkg>
            org.springframework.security.config
        </servicemix.osgi.export.pkg>
        <servicemix.osgi.import.pkg>
            io.rsocket.plugins;resolution:=optional,
            javax.servlet,
            javax.servlet.http,
            javax.sql,
            org.aopalliance.intercept;version="[1,2)";resolution:=optional,
            org.apache.commons.logging;version="[1.1.1,2)";resolution:=optional,
            org.aspectj.weaver.tools;resolution:=optional,
            org.openid4java.consumer;resolution:=optional,
            org.opensaml.core;resolution:=optional,
            org.reactivestreams;version="[1.0,2)";resolution:=optional,
            org.springframework.aop;version="[5.3,6)";resolution:=optional,
            org.springframework.aop.config;version="[5.3,6)";resolution:=optional,
            org.springframework.aop.framework;version="[5.3,6)";resolution:=optional,
            org.springframework.aop.target;version="[5.3,6)";resolution:=optional,
            org.springframework.beans;version="[5.3,6)",
            org.springframework.beans.factory;version="[5.3,6)",
            org.springframework.beans.factory.annotation;version="[5.3,6)",
            org.springframework.beans.factory.config;version="[5.3,6)",
            org.springframework.beans.factory.parsing;version="[5.3,6)",
            org.springframework.beans.factory.support;version="[5.3,6)",
            org.springframework.beans.factory.xml;version="[5.3,6)",
            org.springframework.cglib;version="[5.3,6)";resolution:=optional,
            org.springframework.cglib.core;version="[5.3,6)";resolution:=optional,
            org.springframework.cglib.proxy;version="[5.3,6)";resolution:=optional,
            org.springframework.cglib.reflect;version="[5.3,6)";resolution:=optional,
            org.springframework.context;version="[5.3,6)",
            org.springframework.context.annotation;version="[5.3,6)",
            org.springframework.context.event;version="[5.3,6)",
            org.springframework.context.expression;version="[5.3,6)",
            org.springframework.core;version="[5.3,6)",
            org.springframework.core.annotation;version="[5.3,6)",
            org.springframework.core.convert;version="[5.3,6)",
            org.springframework.core.convert.converter;version="[5.3,6)",
            org.springframework.core.env;version="[5.3,6)",
            org.springframework.core.io;version="[5.3,6)",
            org.springframework.core.io.support;version="[5.3,6)",
            org.springframework.core.log;version="[5.3,6)",
            org.springframework.core.type;version="[5.3,6)",
            org.springframework.expression;version="[5.3,6)";resolution:=optional,
            org.springframework.http;version="[5.3,6)";resolution:=optional,
            org.springframework.http.server.reactive;version="[5.3,6)";resolution:=optional,
            org.springframework.jdbc.datasource.init;version="[5.3,6)";resolution:=optional,
            org.springframework.lang;version="[5.3,6)",
            org.springframework.ldap.core;version="[2.4,3)";resolution:=optional,
            org.springframework.ldap.core.support;version="[2.4,3)";resolution:=optional,
            org.springframework.messaging;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.handler.invocation;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.rsocket;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.rsocket.annotation.support;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.simp;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.simp.annotation.support;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.simp.config;version="[5.3,6)";resolution:=optional,
            org.springframework.messaging.support;version="[5.3,6)";resolution:=optional,
            org.springframework.security.access;version="[${pkgVersion},5.8)",
            org.springframework.security.access.annotation;version="[${pkgVersion},5.8)",
            org.springframework.security.access.expression;version="[${pkgVersion},5.8)",
            org.springframework.security.access.expression.method;version="[${pkgVersion},5.8)",
            org.springframework.security.access.hierarchicalroles;version="[${pkgVersion},5.8)",
            org.springframework.security.access.intercept;version="[${pkgVersion},5.8)",
            org.springframework.security.access.intercept.aopalliance;version="[${pkgVersion},5.8)",
            org.springframework.security.access.intercept.aspectj;version="[${pkgVersion},5.8)",
            org.springframework.security.access.method;version="[${pkgVersion},5.8)",
            org.springframework.security.access.prepost;version="[${pkgVersion},5.8)",
            org.springframework.security.access.vote;version="[${pkgVersion},5.8)",
            org.springframework.security.authentication;version="[${pkgVersion},5.8)",
            org.springframework.security.authentication.dao;version="[${pkgVersion},5.8)",
            org.springframework.security.authorization;version="[${pkgVersion},5.8)",
            org.springframework.security.authorization.method;version="[${pkgVersion},5.8)",
            org.springframework.security.context;version="[${pkgVersion},5.8)",
            org.springframework.security.converter;version="[${pkgVersion},5.8)",
            org.springframework.security.core;version="[${pkgVersion},5.8)",
            org.springframework.security.core.authority;version="[${pkgVersion},5.8)",
            org.springframework.security.core.authority.mapping;version="[${pkgVersion},5.8)",
            org.springframework.security.core.context;version="[${pkgVersion},5.8)",
            org.springframework.security.core.session;version="[${pkgVersion},5.8)",
            org.springframework.security.core.userdetails;version="[${pkgVersion},5.8)",
            org.springframework.security.core.userdetails.memory;version="[${pkgVersion},5.8)",
            org.springframework.security.crypto.bcrypt;version="[${pkgVersion},5.8)",
            org.springframework.security.crypto.factory;version="[${pkgVersion},5.8)",
            org.springframework.security.crypto.password;version="[${pkgVersion},5.8)",
            org.springframework.security.ldap;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.ldap.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.ldap.search;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.ldap.server;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.ldap.userdetails;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.messaging.access.expression;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.messaging.access.intercept;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.messaging.context;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.messaging.util.matcher;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.messaging.web.csrf;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.messaging.web.socket.server;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.endpoint;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.oidc.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.oidc.userinfo;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.registration;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.userinfo;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.web;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.web.method.annotation;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.web.reactive.result.method.annotation;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.web.server;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.client.web.server.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.core;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.core.endpoint;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.core.oidc.user;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.core.user;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.jwt;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.server.resource.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.server.resource.introspection;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.server.resource.web;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.server.resource.web.access;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.server.resource.web.access.server;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.oauth2.server.resource.web.server;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.openid;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.provisioning;version="[${pkgVersion},5.8)",
            org.springframework.security.rsocket.api;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.rsocket.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.rsocket.authorization;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.rsocket.core;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.rsocket.util.matcher;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.core;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.authentication.logout;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.registration;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.servlet.filter;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.web;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.web.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.saml2.provider.service.web.authentication.logout;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.util;version="[${pkgVersion},5.8)",
            org.springframework.security.web;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.access;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.access.channel;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.access.expression;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.access.intercept;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.logout;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.preauth;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.preauth.j2ee;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.preauth.x509;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.rememberme;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.session;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.switchuser;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.ui;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.authentication.www;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.bind.support;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.context;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.context.request.async;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.csrf;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.debug;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.firewall;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.header;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.header.writers;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.header.writers.frameoptions;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.jaasapi;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.method.annotation;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.reactive.result.method.annotation;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.reactive.result.view;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.savedrequest;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.authentication;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.authentication.logout;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.authorization;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.context;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.csrf;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.header;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.savedrequest;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.transport;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.ui;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.server.util.matcher;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.servletapi;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.servlet.support.csrf;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.servlet.util.matcher;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.session;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.util;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.security.web.util.matcher;version="[${pkgVersion},5.8)";resolution:=optional,
            org.springframework.util;version="[5.3,6)",
            org.springframework.util.xml;version="[5.3,6)",
            org.springframework.web.accept;version="[5.3,6)",
            org.springframework.web.context;version="[5.3,6)",
            org.springframework.web.context.request;version="[5.3,6)",
            org.springframework.web.cors;version="[5.3,6)",
            org.springframework.web.cors.reactive;version="[5.3,6)",
            org.springframework.web.filter;version="[5.3,6)",
            org.springframework.web.method.support;version="[5.3,6)",
            org.springframework.web.reactive.config;version="[5.3,6)";resolution:=optional,
            org.springframework.web.reactive.result.method;version="[5.3,6)";resolution:=optional,
            org.springframework.web.reactive.result.method.annotation;version="[5.3,6)";resolution:=optional,
            org.springframework.web.server;version="[5.3,6)",
            org.springframework.web.servlet.config.annotation;version="[5.3,6)";resolution:=optional,
            org.springframework.web.servlet.handler;version="[5.3,6)";resolution:=optional,
            org.springframework.web.servlet.mvc.method.annotation;version="[5.3,6)";resolution:=optional,
            org.springframework.web.servlet.support;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.config.annotation;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.server;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.server.support;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.sockjs;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.sockjs.client;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.sockjs.frame;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.sockjs.support;version="[5.3,6)";resolution:=optional,
            org.springframework.web.socket.sockjs.transport;version="[5.3,6)";resolution:=optional,
            org.w3c.dom,
            reactor.core;resolution:=optional,
            reactor.core.publisher;resolution:=optional,
            reactor.util.context;resolution:=optional
        </servicemix.osgi.import.pkg>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${pkgGroupId}</groupId>
            <artifactId>${pkgArtifactId}</artifactId>
            <version>${pkgVersion}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- sources -->
        <dependency>
            <groupId>${pkgGroupId}</groupId>
            <artifactId>${pkgArtifactId}</artifactId>
            <version>${pkgVersion}</version>
            <classifier>sources</classifier>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>${pkgGroupId}:${pkgArtifactId}</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>${pkgGroupId}:${pkgArtifactId}</artifact>
                                    <includes>
                                        <include>META-INF/spring.*</include>
                                    </includes>
                                </filter>
                            </filters>
                            <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
